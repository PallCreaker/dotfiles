# ---------------------------------------------------------------------------- "
# basic
# ---------------------------------------------------------------------------- "

# プレフィックスキーを Ctrl+j キーにする
set-option -g prefix C-j

# 元々のプレフィックスキーの Ctrl+b だと Vim とかぶるので退避
unbind-key C-b

# ウィンドウ、ペインの番号を1から始まるようにする
# （キーボード配置は1が左にあるので選択しやすい）
set-option -g base-index 1
set-option -g pane-base-index 1

# Mac でクリップボード（ペーストボード）を使いやすく
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/
# http://d.hatena.ne.jp/koseki2/20110816/TmuxCopy
#set-option -g default-command "reattach-to-user-namespace -l zsh"
#bind C-y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
#bind C-p run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
#bind-key C-q run-shell 'reattach-to-user-namespace tmux-pbcopy'

# ウィンドウ閉じたときに番号振り直して詰める
set-option -g renumber-windows on


# ---------------------------------------------------------------------------- "
# mapping
# ---------------------------------------------------------------------------- "

# .tmux.conf の再読み込みを [prefix] r キーに割り当て
# http://d.hatena.ne.jp/kiririmode/20120321/p1
bind-key r source-file ~/.tmux.conf\; display-message "$HOME/.tmux.conf reloaded."

# コピーモードの始まりを v に割り当て
bind-key -t vi-copy v begin-selection

# コピーモードの終わりを y に割り当て
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# ペイン操作を Vi ライクに
unbind-key -n J
unbind-key -n K
unbind-key -n L
unbind-key -n H
bind-key j select-pane -D
bind-key k select-pane -U
bind-key h select-pane -L
bind-key l select-pane -R
bind-key -r J resize-pane -D
bind-key -r K resize-pane -U
bind-key -r L resize-pane -L
bind-key -r H resize-pane -R

# ペインの移動2
# Shift + 上下左右でペインを移動できるようにする。(＜Prefix＞不要)
# 行頭に"bind -n"をつけるとPrefixが不要になる。
bind -n S-left select-pane -L
bind -n S-down select-pane -D
bind -n S-up select-pane -U
bind -n S-right select-pane -R

# ---------------------------------------------------------------------------- "
# appearance
# ---------------------------------------------------------------------------- "

# タイトル表示あり
set-option -g set-titles on

# カラー基本設定
set-option -g default-terminal "screen-256color"

# ステータスラインのカラー
set -g pane-active-border-fg white
set -g pane-active-border-bg black

set-window-option -g mode-bg white
set-window-option -g mode-fg black
set-window-option -g window-status-bg black
set-window-option -g window-status-fg white
set-window-option -g window-status-current-bg blue
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-attr bold
setw -g window-status-current-attr underscore

# ---------------------------------------------------------------------------- "
# statusline
# ---------------------------------------------------------------------------- "

# UTF-8 使っていいかどうか
set-option -g status-utf8 on

# ステータスラインのアップデート間隔（秒）
set-option -g status-interval 5

# ステータスラインの背景色
set-option -g status-bg black

# ステータスラインの文字色
set-option -g status-fg yellow

# ステータスラインの左下のスペースは一旦使わない
set-option -g status-left ''

# ウィンドウ一覧表示でカレントを色反転に
set-window-option -g window-status-format "[#I:#W]"
set-window-option -g window-status-current-format "#[bg=yellow,fg=black][#I:#W]"

# [prefix] q でペイン一覧表示したときの秒数
set-option -g display-panes-time 2000

# [prefix] q でペイン一覧表示したときの通常カラー
set-option -g display-panes-colour white

# [prefix] q でペイン一覧表示したときのアクティブカラー
set-option -g display-panes-active-colour yellow


# ---------------------------------------------------------------------------- "
# extra
# ---------------------------------------------------------------------------- "
set-window-option -g mode-keys vi

# mouse setting
set-window-option -g mode-mouse on
set-option -g mouse-select-window on
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on


# ステータスラインカスタム関連
#
# FYI
# Status Line · zolrath/wemux Wiki : https://github.com/zolrath/wemux/wiki/Status-Line
#
# Macでtmuxのステータスラインに起動時間/ロードアベレージ/メモリ使用率を表示
# よんちゅBlog : http://d.hatena.ne.jp/yonchu/20120414/1334422075
set -g status-attr dim
set -g status-left-length 32
set -g status-right-length 150

set -g status-fg white
set -g status-bg colour234
# set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39

set -g status-left '#[fg=colour223,bg=colour202,bold] #20(hostname -s)#[deafult] #S #[fg=colour202,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour25,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,bold]⮀"
# set -g status-right "#(wemux status_users)"
#
# 左部:whoami@hostname
# set -g status-left '#[fg=blue,bold][#20(whoami) No.#I-#P]#[default]'
# set -g status-left-length 20
# 右部:[2011/03/06(Sun)20:21]
set -g status-right '#[fg=colour241]#H ⮃ #I:#P #[fg=colour31,bg=colour234,nobold]⮂#[fg=colour12,bg=colour31] Mem #(used-mem)%% ⮃ LAve.[#(loadaverage)] ⮂#[fg=colour31,bg=colour255,bold] %Y/%m/%d(%a)%H:%M#[default]'
set -g message-attr bold
set -g message-fg white
set -g message-bg red

# percol integration, select tmux window throgh percol
bind b split-window "tmux lsw | percol --initial-index $(tmux lsw | awk '/active.$/ {print NR-1}') | cut -d':' -f 1 | xargs tmux select-window -t"
bind B split-window "tmux ls | percol --initial-index $(tmux ls | awk '/attached.$/ {print NR-1}') | cut -d':' -f 1 | xargs tmux switch-client -t"
